@model Reports.Helpers.Dtos.ResultDto.ResultDto<Reports.Application.Services.ReportServices.GetUserReportsListService.GetUsersReportsResultDto>

@{
    ViewData["Title"] = "GetOneUsersReports";
}

@if (String.IsNullOrEmpty(Model.Data?.UsersFirstName))
{
    <h1>گزارش ها</h1>
    <div class="alert alert-danger mt-5">
        @Model.Message
    </div>
}
else
{
    <h1>لیست گزارش های @Model.Data.UsersFirstName @Model.Data.UsersLastName</h1>


    @*    <div class="row">
        <form asp-action="GetOneUsersReports">
        <label class="date" for="date">جستجوی تاریخ مورد نظر:</label>
        <input type="text" class="date form-control col-2" id="date" name="searchKeydate" value="@Model.Data.SearchKeyDate" />
        <input type="hidden" name="UserId" value="@Model.Data.UserId" />
        <input type="hidden" name="UsersFirstName" value="@Model.Data.UsersFirstName" />
        <input type="hidden" name="UsersLastName" value="@Model.Data.UsersLastName" />
        <button class="btn btn-outline-primary mt-2" type="submit">جستجو</button>
        </form>

        جستجوی گزارش ها در بازه:
        <form asp-action="GetOneUsersReports">
        <label>از تاریخ:</label>
        <input class="date form-control col-2" type="text" name="startPeriod" value="@(Model.Data.StartPeriod)" />
        <label>تا تاریخ:</label>
        <input class="date form-control col-2" type="text" name="finishPeriod" value="@(Model.Data.FinishPeriod)" />
        <input type="hidden" name="UserId" value="@Model.Data.UserId" />
        <input type="hidden" name="UsersFirstName" value="@Model.Data.UsersFirstName" />
        <input type="hidden" name="UsersLastName" value="@Model.Data.UsersLastName" />
        <button class="btn btn-outline-success mt-2" type="submit">جستجو</button>
        </form>
        </div>
    *@
        <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-success">
                        <h4 class="card-title">فیلترها</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">

    <div class="row">

        <form class="col-md-4" asp-action="GetOneUsersReports">
            جستجوی گزارش ها در بازه:
            <br />
            <label>از تاریخ:</label>
            <input class="date form-control col-md-4" type="text" name="startPeriod" value="@(Model.Data.StartPeriod)" />
            <label>تا تاریخ:</label>
            <input class="date form-control col-md-4" type="text" name="finishPeriod" value="@(Model.Data.FinishPeriod)" />
            <input type="hidden" name="hasNoneRemoteReports" value="@Model.Data.HasNoneRemoteReports.ToString()" />
            <input type="hidden" name="hasRemoteReports" value="@Model.Data.HasRemoteReports.ToString()" />
            <input type="hidden" name="UserId" value="@Model.Data.UserId" />
            <input type="hidden" name="UsersFirstName" value="@Model.Data.UsersFirstName" />
            <input type="hidden" name="UsersLastName" value="@Model.Data.UsersLastName" />
            <button class="btn btn-outline-success mt-2" type="submit">جستجو</button>
        </form>


        <form class="col-md-4" asp-action="GetOneUsersReports">
            <label class="date" for="date">جستجوی تاریخ مورد نظر:</label>
            <input type="text" class="date form-control col-md-4" id="date" name="searchKeydate" value="@(Model.Data.SearchKeyDate)" />
            <input type="hidden" name="hasNoneRemoteReports" value="@Model.Data.HasNoneRemoteReports.ToString()" />
            <input type="hidden" name="hasRemoteReports" value="@Model.Data.HasRemoteReports.ToString()" />
            <input type="hidden" name="UserId" value="@Model.Data.UserId" />
            <input type="hidden" name="UsersFirstName" value="@Model.Data.UsersFirstName" />
            <input type="hidden" name="UsersLastName" value="@Model.Data.UsersLastName" />
            <button class="btn btn-outline-primary mt-2" type="submit">جستجو</button>
        </form>

        <form class="col-md-4" asp-action="GetOneUsersReports">
            <div>
                فیلتر کردن گزارش ها بر اساس حضوری/غیرحضوری:
            </div>
            <div class="form-check mt-3">

                <input name="" class="form-check-input" type="checkbox" id="hasNoneRemote">
                <label class="form-check-label" for="flexCheckDefault">
                    نمایش گزارش های حضوری
                </label>
            </div>
            <div class="form-check">
                <input name="" class="form-check-input" type="checkbox" id="hasRemote">
                <label class="form-check-label" for="flexCheckChecked">
                    نمایش گزارش های غیر حضوری
                </label>
                <input name="hasNoneRemoteReports" id="hasNoneRemoteValue" type="hidden" />
                <input name="hasRemoteReports" id="hasRemoteValue" type="hidden" />
                <input name="searchKeydate" type="hidden" value="@Model.Data.SearchKeyDate" />
                <input name="startPeriod" type="hidden" value="@Model.Data.StartPeriod" />
                <input name="finishPeriod" type="hidden" value="@Model.Data.FinishPeriod" />
                <input type="hidden" name="UserId" value="@Model.Data.UserId" />
                <input type="hidden" name="UsersFirstName" value="@Model.Data.UsersFirstName" />
                <input type="hidden" name="UsersLastName" value="@Model.Data.UsersLastName" />
            </div>
            <button class="btn btn-outline-secondary mt-2" type="submit">اعمال فیلتر</button>
        </form>
    </div>

                    </div>
                </div>
            </div>
        </div>
    </div>






    @if (!Model.Succeeded)
    {
        <div class="alert alert-danger">
            @Model.Message
        </div>
    }
    else
    {

            <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title-wrap bar-success">
                        <h4 class="card-title">نمودار</h4>
                    </div>
                </div>
                <div class="card-body">
                    <div class="card-block">
        @if (Model.Data.SpecificDateisSearched)
        {
            <div class="alert alert-secondary">
                نمایش گزارش در تاریخ: @Model.Data.SearchKeyDate
            </div>
        }
        else if (Model.Data.PeriodIsSearched)
        {
            <div class="row d-flex justify-content-between alert alert-secondary">
                @if (!String.IsNullOrEmpty(Model.Data.PeriodName))
                {
                    <h3>
                        بازه @Model.Data.PeriodName ایجاد شده توسط @Model.Data.UsersFirstName @Model.Data.UsersLastName
                    </h3>
                }
                <div>نمایش گزارش ها از تاریخ @Model.Data.StartPeriod تا تاریخ @Model.Data.FinishPeriod</div>
                <div>مجموع ساعت کار در این بازه @Model.Data.TotalHoursWorkedInPeriod ساعت است</div>
            </div>
        }

        <table class="table table-responsive">

            <thead>
                <tr>
                    <th scope="col">تاریخ</th>
                    <th scope="col">ساعت شروع کار</th>
                    <th scope="col">ساعت پایان کار</th>
                    <th scope="col">مجموع ساعت کار</th>
                    <th scope="col">حضوری/غیرحضوری</th>
                    <th scope="col" class="col-6">جزئیات گزارش</th>
                </tr>
            </thead>
            <tbody class="table-group-divider">

                @foreach (var item in Model.Data.ReportsList)
                {
                    <tr>
                        <td>@item.Date</td>
                        <td>@item.StartWorkTime</td>
                        <td>@item.FinishWorkTime</td>
                        <td>@item.WorkTime</td>
                        <td>@item.IsRemote</td>
                        <td class="col-6">@item.ReportsDetail</td>
                    </tr>
                }

            </tbody>
        </table>


                    </div>
                </div>
            </div>
        </div>
    </div>






        <nav aria-label="Page navigation example" dir="ltr" style="direction:ltr !important">
            <ul class="pagination" dir="ltr" style="direction:ltr !important">

                <li class="page-item">
                    <a class="page-link"
               asp-action="GetOneUsersReports"
               asp-route-UserId="@Model.Data.UserId"
               asp-route-UsersFirstName="@Model.Data.UsersFirstName"
               asp-route-UsersLastName="@Model.Data.UsersLastName"
               asp-route-SearchKeyDate="@Model.Data.SearchKeyDate"
               asp-route-StartPeriod="@Model.Data.StartPeriod"
               asp-route-FinishPeriod="@Model.Data.FinishPeriod"
               asp-route-HasRemoteReports="@Model.Data.HasRemoteReports.ToString()"
               asp-route-HasNoneRemoteReports="@Model.Data.HasNoneRemoteReports.ToString()"
               asp-route-PeriodName="@Model.Data.PeriodName"
               asp-route-PageIndex="1">
                        اولین صفحه
                    </a>
                </li>

                @if (Model.Data.PrevIsDisabled)
                {
                    <li class="page-item disabled"><a class="page-link" href="">صفحه قبلی</a></li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link"
               asp-action="GetOneUsersReports"
               asp-route-UserId="@Model.Data.UserId"
               asp-route-UsersFirstName="@Model.Data.UsersFirstName"
               asp-route-UsersLastName="@Model.Data.UsersLastName"
               asp-route-SearchKeyDate="@Model.Data.SearchKeyDate"
               asp-route-StartPeriod="@Model.Data.StartPeriod"
               asp-route-FinishPeriod="@Model.Data.FinishPeriod"
               asp-route-HasRemoteReports="@Model.Data.HasRemoteReports.ToString()"
               asp-route-HasNoneRemoteReports="@Model.Data.HasNoneRemoteReports.ToString()"
               asp-route-PeriodName="@Model.Data.PeriodName"
               asp-route-PageIndex="@(Model.Data.RequestedPageIndex-1)">
                            صفحه قبلی
                        </a>
                    </li>

                }
                @for (int i = Model.Data.FirstPageIndexToShow; i <= Model.Data.LastPageIndexToShow; i++)
                {
                    if (i == Model.Data.RequestedPageIndex)
                    {
                        <li class="page-item active"><a class="page-link" href="#">@i</a></li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link"
               asp-action="GetOneUsersReports"
               asp-route-UserId="@Model.Data.UserId"
               asp-route-UsersFirstName="@Model.Data.UsersFirstName"
               asp-route-UsersLastName="@Model.Data.UsersLastName"
               asp-route-SearchKeyDate="@Model.Data.SearchKeyDate"
               asp-route-StartPeriod="@Model.Data.StartPeriod"
               asp-route-FinishPeriod="@Model.Data.FinishPeriod"
               asp-route-HasRemoteReports="@Model.Data.HasRemoteReports.ToString()"
               asp-route-HasNoneRemoteReports="@Model.Data.HasNoneRemoteReports.ToString()"
               asp-route-PeriodName="@Model.Data.PeriodName"
               asp-route-PageIndex="@i">
                                @i
                            </a>
                        </li>

                    }
                }
                @if (Model.Data.NextIsDisabled)
                {
                    <li class="page-item disabled"><a class="page-link" href="">صفحه بعدی</a></li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link"
               asp-action="GetOneUsersReports"
               asp-route-UserId="@Model.Data.UserId"
               asp-route-UsersFirstName="@Model.Data.UsersFirstName"
               asp-route-UsersLastName="@Model.Data.UsersLastName"
               asp-route-SearchKeyDate="@Model.Data.SearchKeyDate"
               asp-route-StartPeriod="@Model.Data.StartPeriod"
               asp-route-FinishPeriod="@Model.Data.FinishPeriod"
               asp-route-HasRemoteReports="@Model.Data.HasRemoteReports.ToString()"
               asp-route-HasNoneRemoteReports="@Model.Data.HasNoneRemoteReports.ToString()"
               asp-route-PeriodName="@Model.Data.PeriodName"
               asp-route-PageIndex="@(Model.Data.RequestedPageIndex+1)">
                            صفحه بعدی
                        </a>
                    </li>
                }

                <li class="page-item">
                    <a class="page-link"
               asp-action="GetOneUsersReports"
               asp-route-UserId="@Model.Data.UserId"
               asp-route-UsersFirstName="@Model.Data.UsersFirstName"
               asp-route-UsersLastName="@Model.Data.UsersLastName"
               asp-route-SearchKeyDate="@Model.Data.SearchKeyDate"
               asp-route-StartPeriod="@Model.Data.StartPeriod"
               asp-route-FinishPeriod="@Model.Data.FinishPeriod"
               asp-route-HasRemoteReports="@Model.Data.HasRemoteReports.ToString()"
               asp-route-HasNoneRemoteReports="@Model.Data.HasNoneRemoteReports.ToString()"
               asp-route-PeriodName="@Model.Data.PeriodName"
x               asp-route-PageIndex="@Model.Data.PagesCount">
                        آخرین صفحه
                    </a>
                </li>
            </ul>
        </nav>

    }
    @section Scripts{
<script src="~/js/persian-date.min.js"></script>


<script src="~/js/persian-datepicker.min.js"></script>

<script>

    var hasRemote = @Json.Serialize(Model.Data.HasRemoteReports);
    var hasNoneRemote = @Json.Serialize(Model.Data.HasNoneRemoteReports);

    $(document).ready(function(){
            $('#hasRemote').prop('checked',hasRemote);
            $('#hasNoneRemote').prop('checked',hasNoneRemote);

            $('#hasRemoteValue').prop('value',hasRemote? 'True':'False');
            $('#hasNoneRemoteValue').prop('value',hasNoneRemote? 'True':'False');
    })

    $('#hasRemote').on('change',function(){

        if ($('#hasRemote').is(':checked')) {
            $('#hasRemoteValue').attr('value', 'True');
          } else {
            $('#hasRemoteValue').attr('value', 'False');
          }


    })
    $('#hasNoneRemote').on('change',function(){

        if ($('#hasNoneRemote').is(':checked')) {
            $('#hasNoneRemoteValue').attr('value', 'True');
          } else {
            $('#hasNoneRemoteValue').attr('value', 'False');
          }


    })

</script>



<script type="text/javascript">

    $(document).ready(function() {
      $(".date").pDatepicker({
                    initialValue:true,
          initialValueType:'persian',

          calendar:{
        persian: {
            locale: 'en'
        }
    },
          format:'L',
      });
    });
</script>

}
}